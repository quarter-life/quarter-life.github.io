(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{585:function(s,t,a){"use strict";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"序言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#序言"}},[s._v("#")]),s._v(" 序言")]),s._v(" "),a("blockquote",[a("p",[s._v("这是 “Python 工匠”系列的第 3 篇文章。"),a("a",{attrs:{href:"https://github.com/piglei/one-python-craftsman",target:"_blank",rel:"noopener noreferrer"}},[s._v("[查看系列所有文章]"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("数字是几乎所有编程语言里最基本的数据类型，它是我们通过代码连接现实世界的基础。在 Python 里有三种数值类型：整型（int）、浮点型（float）和复数（complex）。绝大多数情况下，我们只需要和前两种打交道。")]),s._v(" "),a("p",[s._v("整型在 Python 中比较让人省心，因为它不区分有无符号并且永不溢出。但浮点型仍和绝大多数其他编程语言一样，依然有着精度问题，经常让很多刚进入编程世界大门的新人们感到困惑："),a("a",{attrs:{href:"https://stackoverflow.com/questions/21895756/why-are-floating-point-numbers-inaccurate",target:"_blank",rel:"noopener noreferrer"}},[s._v('"Why Are Floating Point Numbers Inaccurate?"'),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("p",[s._v("相比数字，Python 里的字符串要复杂的多。要掌握它，你得先弄清楚 bytes 和 str 的区别。如果更不巧，你还是位 Python2 用户的话，光 unicode 和字符编码问题就够你喝上好几壶了*（赶快迁移到 Python3 吧，就在今天！）*。")]),s._v(" "),a("p",[s._v("不过，上面提到的这些都不是这篇文章的主题，如果感兴趣，你可以在网上找到成堆的相关资料。在这篇文章里，我们将讨论一些 "),a("strong",[s._v("更细微、更不常见")]),s._v(" 的编程实践。来帮助你写出更好的 Python 代码。")]),s._v(" "),a("h3",{attrs:{id:"内容目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容目录"}},[s._v("#")]),s._v(" 内容目录")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5"}},[s._v("最佳实践")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#1-%E5%B0%91%E5%86%99%E6%95%B0%E5%AD%97%E5%AD%97%E9%9D%A2%E9%87%8F"}},[s._v("1. 少写数字字面量")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8-enum-%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E6%94%B9%E5%96%84%E4%BB%A3%E7%A0%81"}},[s._v("使用 enum 枚举类型改善代码")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#2-%E5%88%AB%E5%9C%A8%E8%A3%B8%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E4%B8%8A%E8%B5%B0%E5%A4%AA%E8%BF%9C"}},[s._v("2. 别在裸字符串处理上走太远")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#3-%E4%B8%8D%E5%BF%85%E9%A2%84%E8%AE%A1%E7%AE%97%E5%AD%97%E9%9D%A2%E9%87%8F%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[s._v("3. 不必预计算字面量表达式")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7"}},[s._v("实用技巧")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#1-%E5%B8%83%E5%B0%94%E5%80%BC%E5%85%B6%E5%AE%9E%E4%B9%9F%E6%98%AF%E6%95%B0%E5%AD%97"}},[s._v("1. 布尔值其实也是“数字”")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#2-%E6%94%B9%E5%96%84%E8%B6%85%E9%95%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%8F%AF%E8%AF%BB%E6%80%A7"}},[s._v("2. 改善超长字符串的可读性")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%BD%93%E5%A4%9A%E7%BA%A7%E7%BC%A9%E8%BF%9B%E9%87%8C%E5%87%BA%E7%8E%B0%E5%A4%9A%E8%A1%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%B6"}},[s._v("当多级缩进里出现多行字符串时")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#3-%E5%88%AB%E5%BF%98%E4%BA%86%E9%82%A3%E4%BA%9B-r-%E5%BC%80%E5%A4%B4%E7%9A%84%E5%86%85%E5%BB%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0"}},[s._v("3. 别忘了那些 “r” 开头的内建字符串函数")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#4-%E4%BD%BF%E7%94%A8%E6%97%A0%E7%A9%B7%E5%A4%A7-floatinf"}},[s._v('4. 使用“无穷大” float("inf")')])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%B8%B8%E8%A7%81%E8%AF%AF%E5%8C%BA"}},[s._v("常见误区")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#1-value--1-%E5%B9%B6%E9%9D%9E%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8"}},[s._v("1. “value  = 1” 并非线程安全")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#2-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5%E5%B9%B6%E4%B8%8D%E6%85%A2"}},[s._v("2. 字符串拼接并不慢")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E7%BB%93%E8%AF%AD"}},[s._v("结语")])])]),s._v(" "),a("h2",{attrs:{id:"最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[s._v("#")]),s._v(" 最佳实践")]),s._v(" "),a("h3",{attrs:{id:"_1-少写数字字面量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-少写数字字面量"}},[s._v("#")]),s._v(" 1. 少写数字字面量")]),s._v(" "),a("p",[s._v("“数字字面量（integer literal）” 是指那些直接出现在代码里的数字。它们分布在代码里的各个角落，比如代码 "),a("code",[s._v("del users[0]")]),s._v(" 里的 "),a("code",[s._v("0")]),s._v(" 就是一个数字字面量。它们简单、实用，每个人每天都在写。"),a("strong",[s._v("但是，当你的代码里不断重复出现一些特定字面量时，你的“代码质量告警灯”就应该亮起黄灯 🚥 了。")])]),s._v(" "),a("p",[s._v("举个例子，假如你刚加入一家心仪已久的新公司，同事转交给你的项目里有这么一个函数：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mark_trip_as_featured")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("trip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""将某个旅程添加到推荐栏目\n    """')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" trip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("source "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        do_some_thing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("trip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" trip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("source "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        do_some_other_thing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("trip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这个函数做了什么事？你努力想搞懂它的意思，不过 "),a("code",[s._v("trip.source == 11")]),s._v(" 是什么情况？那 "),a("code",[s._v("== 12")]),s._v(" 呢？这两行代码很简单，没有用到任何魔法特性。但初次接触代码的你可能需要花费"),a("strong",[s._v("一整个下午")]),s._v("，才能弄懂它们的含义。")]),s._v(" "),a("p",[a("strong",[s._v("问题就出在那几个数字字面量上。")]),s._v(" 最初写下这个函数的人，可能是在公司成立之初加入的那位元老程序员。而他对那几个数字的含义非常清楚。但如果你是一位刚接触这段代码的新人，就完全是另外一码事了。")]),s._v(" "),a("h4",{attrs:{id:"使用-enum-枚举类型改善代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-enum-枚举类型改善代码"}},[s._v("#")]),s._v(" 使用 enum 枚举类型改善代码")]),s._v(" "),a("p",[s._v("那么，怎么改善这段代码？最直接的方式，就是为这两个条件分支添加注释。不过在这里，“添加注释”显然不是提升代码可读性的最佳办法*（其实在绝大多数其他情况下都不是）*。我们需要用有意义的名称来代替这些字面量，而"),a("code",[s._v("枚举类型（enum）")]),s._v("用在这里最合适不过了。")]),s._v(" "),a("p",[a("code",[s._v("enum")]),s._v(" 是 Python 自 3.4 版本引入的内置模块，如果你使用的是更早的版本，可以通过 "),a("code",[s._v("pip install enum34")]),s._v(" 来安装它。下面是使用 enum 的样例代码：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -*- coding: utf-8 -*-")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" enum "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" IntEnum\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TripSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("IntEnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    FROM_WEBSITE "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\n    FROM_IOS_CLIENT "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mark_trip_as_featured")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("trip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" trip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("source "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" TripSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FROM_WEBSITE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        do_some_thing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("trip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" trip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("source "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" TripSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FROM_IOS_CLIENT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        do_some_other_thing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("trip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("将重复出现的数字字面量定义成枚举类型，不光可以改善代码的可读性，代码出现 Bug 的几率也会降低。")]),s._v(" "),a("p",[s._v("试想一下，如果你在某个分支判断时将 "),a("code",[s._v("11")]),s._v(" 错打成了 "),a("code",[s._v("111")]),s._v(" 会怎么样？我们时常会犯这种错，而这类错误在早期特别难被发现。将这些数字字面量全部放入枚举类型中可以比较好的规避这类问题。类似的，将字符串字面量改写成枚举也可以获得同样的好处。")]),s._v(" "),a("p",[s._v("使用枚举类型代替字面量的好处：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("提升代码可读性")]),s._v("：所有人都不需要记忆某个神奇的数字代表什么")]),s._v(" "),a("li",[a("strong",[s._v("提升代码正确性")]),s._v("：减少打错数字或字母产生 bug 的可能性")])]),s._v(" "),a("p",[s._v("当然，你完全没有必要把代码里的所有字面量都改成枚举类型。 "),a("strong",[s._v("代码里出现的字面量，只要在它所处的上下文里面容易理解，就可以使用它。")]),s._v(" 比如那些经常作为数字下标出现的 "),a("code",[s._v("0")]),s._v(" 和 "),a("code",[s._v("-1")]),s._v(" 就完全没有问题，因为所有人都知道它们的意思。")]),s._v(" "),a("h3",{attrs:{id:"_2-别在裸字符串处理上走太远"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-别在裸字符串处理上走太远"}},[s._v("#")]),s._v(" 2. 别在裸字符串处理上走太远")]),s._v(" "),a("p",[s._v("什么是“裸字符串处理”？在这篇文章里，它指"),a("strong",[s._v("只使用基本的加减乘除和循环、配合内置函数/方法来操作字符串，获得我们需要的结果。")])]),s._v(" "),a("p",[s._v("所有人都写过这样的代码。有时候我们需要拼接一大段发给用户的告警信息，有时我们需要构造一大段发送给数据库的 SQL 查询语句，就像下面这样：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch_users")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" min_level"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" gender"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" has_membership"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sort_field"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"created"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""获取用户列表\n   \n    :param int min_level: 要求的最低用户级别，默认为所有级别\n    :param int gender: 筛选用户性别，默认为所有性别\n    :param int has_membership: 筛选所有会员/非会员用户，默认非会员\n    :param str sort_field: 排序字段，默认为按 created "用户创建日期"\n    :returns: 列表：[(User ID, User Name), ...]\n    """')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 一种古老的 SQL 拼接技巧，使用 "WHERE 1=1" 来简化字符串拼接操作')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 区分查询 params 来避免 SQL 注入问题")]),s._v("\n    statement "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SELECT id, name FROM users WHERE 1=1"')]),s._v("\n    params "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" min_level "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        statement "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" AND level >= ?"')]),s._v("\n        params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("min_level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" gender "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        statement "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" AND gender >= ?"')]),s._v("\n        params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" has_membership"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        statement "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" AND has_membership == true"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        statement "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" AND has_membership == false"')]),s._v("\n    \n    statement "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" ORDER BY ?"')]),s._v("\n    params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sort_field"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("execute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("p",[s._v("我们之所以用这种方式拼接出需要的字符串 - "),a("em",[s._v("在这里是 SQL 语句")]),s._v(" - 是因为这样做简单、直接，符合直觉。但是这样做最大的问题在于："),a("strong",[s._v("随着函数逻辑变得更复杂，这段拼接代码会变得容易出错、难以扩展。"),a("strong",[s._v("事实上，上面这段 Demo 代码也只是仅仅做到")]),s._v("看上去")]),s._v("没有明显的 bug 而已 "),a("em",[s._v("（谁知道有没有其他隐藏问题）")]),s._v("。")]),s._v(" "),a("p",[s._v("其实，对于 SQL 语句这种结构化、有规则的字符串，用对象化的方式构建和编辑它才是更好的做法。下面这段代码用 "),a("a",{attrs:{href:"https://www.sqlalchemy.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("SQLAlchemy"),a("OutboundLink")],1),s._v(" 模块完成了同样的功能：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch_users_v2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" min_level"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" gender"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" has_membership"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sort_field"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"created"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""获取用户列表\n    """')]),s._v("\n    query "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" select"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" min_level "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        query "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("where"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("level "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" min_level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" gender "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        query "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("where"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    query "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("where"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("has_membership "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" has_membership"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("order_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sort_field"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("execute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("上面的 "),a("code",[s._v("fetch_users_v2")]),s._v(" 函数更短也更好维护，而且根本不需要担心 SQL 注入问题。所以，当你的代码中出现复杂的裸字符串处理逻辑时，请试着用下面的方式替代它：")]),s._v(" "),a("p",[a("code",[s._v("Q: 目标/源字符串是结构化的，遵循某种格式吗？")])]),s._v(" "),a("ul",[a("li",[s._v("是：找找是否已经有开源的对象化模块操作它们，或是自己写一个\n"),a("ul",[a("li",[s._v("SQL：SQLAlchemy")]),s._v(" "),a("li",[s._v("XML：lxml")]),s._v(" "),a("li",[s._v("JSON、YAML ...")])])]),s._v(" "),a("li",[s._v("否：尝试使用模板引擎而不是复杂字符串处理逻辑来达到目的\n"),a("ul",[a("li",[s._v("Jinja2")]),s._v(" "),a("li",[s._v("Mako")]),s._v(" "),a("li",[s._v("Mustache")])])])]),s._v(" "),a("h3",{attrs:{id:"_3-不必预计算字面量表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-不必预计算字面量表达式"}},[s._v("#")]),s._v(" 3. 不必预计算字面量表达式")]),s._v(" "),a("p",[s._v("我们的代码里偶尔会出现一些比较复杂的数字，就像下面这样：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta_seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果时间已经过去了超过 11 天，不做任何事")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" delta_seconds "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("950400")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("话说在前头，上面的代码没有任何毛病。")]),s._v(" "),a("p",[s._v("首先，我们在小本子（当然，和我一样的聪明人会用 IPython）上算了算："),a("code",[s._v("11天一共包含多少秒？")]),s._v("。然后再把结果 "),a("code",[s._v("950400")]),s._v(" 这个神奇的数字填进我们的代码里，最后心满意足的在上面补上一行注释：告诉所有人这个神奇的数字是怎么来的。")]),s._v(" "),a("p",[s._v("我想问的是："),a("em",[s._v("“为什么我们不直接把代码写成 "),a("code",[s._v("if delta_seconds < 11 * 24 * 3600:")]),s._v(" 呢？”")])]),s._v(" "),a("p",[a("strong",[s._v("“性能”，答案一定会是“性能”")]),s._v("。我们都知道 Python 是一门~~（速度欠佳的）~~解释型语言，所以预先计算出 "),a("code",[s._v("950400")]),s._v(" 正是因为我们不想让每次对函数 "),a("code",[s._v("f1")]),s._v(" 的调用都带上这部分的计算开销。不过事实是："),a("strong",[s._v("即使我们把代码改成 "),a("code",[s._v("if delta_seconds < 11 * 24 * 3600:")]),s._v("，函数也不会多出任何额外的开销。")])]),s._v(" "),a("p",[s._v("Python 代码在执行时会被解释器编译成字节码，而真相就藏在字节码里。让我们用 dis 模块看看：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta_seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" delta_seconds "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3600")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" dis\ndis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dis 执行结果")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" LOAD_FAST                "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta_seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" LOAD_CONST               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("950400")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" COMPARE_OP               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" POP_JUMP_IF_FALSE       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" LOAD_CONST               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" RETURN_VALUE\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" LOAD_CONST               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" RETURN_VALUE\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("看见上面的 "),a("code",[s._v("2 LOAD_CONST 1 (950400)")]),s._v(" 了吗？这表示 Python 解释器在将源码编译成成字节码时，会计算 "),a("code",[s._v("11 * 24 * 3600")]),s._v(" 这段整表达式，并用 "),a("code",[s._v("950400")]),s._v(" 替换它。")]),s._v(" "),a("p",[s._v("所以，"),a("strong",[s._v("当我们的代码中需要出现复杂计算的字面量时，请保留整个算式吧。它对性能没有任何影响，而且会增加代码的可读性。")])]),s._v(" "),a("blockquote",[a("p",[s._v("Hint：Python 解释器除了会预计算数值字面量表达式以外，还会对字符串、列表做类似的操作。一切都是为了性能。谁让你们老吐槽 Python 慢呢？")])]),s._v(" "),a("h2",{attrs:{id:"实用技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实用技巧"}},[s._v("#")]),s._v(" 实用技巧")]),s._v(" "),a("h3",{attrs:{id:"_1-布尔值其实也是-数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-布尔值其实也是-数字"}},[s._v("#")]),s._v(" 1. 布尔值其实也是“数字”")]),s._v(" "),a("p",[s._v("Python 里的两个布尔值 "),a("code",[s._v("True")]),s._v(" 和 "),a("code",[s._v("False")]),s._v(" 在绝大多数情况下都可以直接等价于 "),a("code",[s._v("1")]),s._v("  和 "),a("code",[s._v("0")]),s._v(" 两个整数来使用，就像这样：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\nTraceback "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("most recent call last"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  File "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<stdin>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" line "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("module"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nZeroDivisionError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" division by zero\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("那么记住这点有什么用呢？首先，它们可以配合 "),a("code",[s._v("sum")]),s._v(" 函数在需要计算总数时简化操作：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("此外，如果将某个布尔值表达式作为列表的下标使用，可以实现类似三元表达式的目的：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 类似的三元表达式："Javascript" if 2 > 1 else "Python"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Python"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Javascript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Javascript'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_2-改善超长字符串的可读性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-改善超长字符串的可读性"}},[s._v("#")]),s._v(" 2. 改善超长字符串的可读性")]),s._v(" "),a("p",[s._v("单行代码的长度不宜太长。比如 PEP8 里就建议每行字符数不得超过 "),a("strong",[s._v("79")]),s._v("。现实世界里，大部分人遵循的单行最大字符数在 79 到 119 之间。如果只是代码，这样的要求是比较容易达到的，但假设代码里需要出现一段超长的字符串呢？")]),s._v(" "),a("p",[s._v("这时，除了使用斜杠 "),a("code",[s._v("\\")]),s._v(" 和加号 "),a("code",[s._v("+")]),s._v(" 将长字符串拆分为好几段以外，还有一种更简单的办法："),a("strong",[s._v("使用括号将长字符串包起来，然后就可以随意折行了")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"There is something really bad happened during the process. "')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Please contact your administrator."')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"There is something really bad happened during the process. "')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Please contact your administrator."')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h4",{attrs:{id:"当多级缩进里出现多行字符串时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当多级缩进里出现多行字符串时"}},[s._v("#")]),s._v(" 当多级缩进里出现多行字符串时")]),s._v(" "),a("p",[s._v("日常编码时，还有一种比较麻烦的情况。就是需要在已经有缩进层级的代码里，插入多行字符串字面量。因为多行字符串不能包含当前的缩进空格，所以，我们需要把代码写成这样：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("is_active"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""Welcome, today\'s movie list:\n- Jaw (1975)\n- The Shining (1980)\n- Saw (2004)"""')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("但是这样写会破坏整段代码的缩进视觉效果，显得非常突兀。要改善它有很多种办法，比如我们可以把这段多行字符串作为变量提取到模块的最外层。不过，如果在你的代码逻辑里更适合用字面量的话，你也可以用标准库 "),a("code",[s._v("textwrap")]),s._v(" 来解决这个问题：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" textwrap "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" dedent\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("is_active"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dedent 将会缩进掉整段文字最左边的空字符串")]),s._v("\n        message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dedent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\\\n            Welcome, today\'s movie list:\n            - Jaw (1975)\n            - The Shining (1980)\n            - Saw (2004)"""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"大数字也可以变得更加可读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大数字也可以变得更加可读"}},[s._v("#")]),s._v(" 大数字也可以变得更加可读")]),s._v(" "),a("blockquote",[a("p",[s._v("该小节内容由 "),a("a",{attrs:{href:"https://github.com/laixintao",target:"_blank",rel:"noopener noreferrer"}},[s._v("@laixintao"),a("OutboundLink")],1),s._v(" 提供。")])]),s._v(" "),a("p",[s._v("对那些特别大的数字，可以通过在中间添加下划线来提高可读性\n("),a("a",{attrs:{href:"https://www.python.org/dev/peps/pep-0515/",target:"_blank",rel:"noopener noreferrer"}},[s._v("PEP515"),a("OutboundLink")],1),s._v("，需要 Python3.6+)。")]),s._v(" "),a("p",[s._v("比如：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10_000_000.0")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以“千”为单位划分数字")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000000.0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xCAFE_F00D")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 16进制数字同样有效，4个一组更易读")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3405705229")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0b_0011_1111_0100_1110")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 二进制也有效")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16206")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0b_1111_0000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 处理字符串的时候也会正确处理下划线")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("240")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"_3-别忘了那些-r-开头的内建字符串函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-别忘了那些-r-开头的内建字符串函数"}},[s._v("#")]),s._v(" 3. 别忘了那些 “r” 开头的内建字符串函数")]),s._v(" "),a("p",[s._v("Python 的字符串有着非常多实用的内建方法，最常用的有 "),a("code",[s._v(".strip()")]),s._v("、"),a("code",[s._v(".split()")]),s._v(" 等。这些内建方法里的大多数，处理起来的顺序都是从左往右。但是其中也包含了部分以 "),a("code",[s._v("r")]),s._v(" 打头的"),a("strong",[s._v("从右至左处理")]),s._v("的镜像方法。在处理特定逻辑时，使用它们可以让你事半功倍。")]),s._v(" "),a("p",[s._v('假设我们需要解析一些访问日志，日志格式为："{user_agent}" {content_length}：')]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v(">>> log_line = '\"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\" 47632'\n")])])]),a("p",[s._v("如果使用 "),a("code",[s._v(".split()")]),s._v(" 将日志拆分为 "),a("code",[s._v("(user_agent, content_length)")]),s._v("，我们需要这么写：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" log_line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\"'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'47632'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("但是如果使用 "),a("code",[s._v(".rsplit()")]),s._v(" 的话，处理逻辑就更直接了：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" log_line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rsplit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\"'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'47632'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_4-使用-无穷大-float-inf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用-无穷大-float-inf"}},[s._v("#")]),s._v(' 4. 使用“无穷大” float("inf")')]),s._v(" "),a("p",[s._v("如果有人问你："),a("em",[s._v("“Python 里什么数字最大/最小？”")]),s._v("。你应该怎么回答？有这样的东西存在吗？")]),s._v(" "),a("p",[s._v("答案是：“有的，它们就是："),a("code",[s._v('float("inf")')]),s._v(" 和 "),a("code",[s._v('float("-inf")')]),s._v("”。它们俩分别对应着数学世界里的正负无穷大。当它们和任意数值进行比较时，满足这样的规律："),a("code",[s._v('float("-inf") < 任意数值 < float("inf")')]),s._v("。")]),s._v(" "),a("p",[s._v("因为它们有着这样的特点，我们可以在某些场景用上它们：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A. 根据年龄升序排序，没有提供年龄放在最后边")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" users "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tom"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jenny"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"andrew"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("43")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("sorted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("lambda")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("or")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'inf'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jenny'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'andrew'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# B. 作为循环初始值，简化第一次判断逻辑")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" max_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-inf'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找到列表中最大的数字")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("71")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" max_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("         max_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" max_num\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("71")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h2",{attrs:{id:"常见误区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见误区"}},[s._v("#")]),s._v(" 常见误区")]),s._v(" "),a("h3",{attrs:{id:"_1-value-1-并非线程安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-value-1-并非线程安全"}},[s._v("#")]),s._v(" 1. “value += 1” 并非线程安全")]),s._v(" "),a("p",[s._v("当我们编写多线程程序时，经常需要处理复杂的共享变量和竞态等问题。")]),s._v(" "),a("p",[s._v("“线程安全”，通常被用来形容 **某个行为或者某类数据结构，可以在多线程环境下被共享使用并产生预期内的结果。**一个典型的满足“线程安全”的模块就是 "),a("a",{attrs:{href:"https://docs.python.org/3/library/queue.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("queue 队列模块"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("p",[s._v("而我们常做的 "),a("code",[s._v("value += 1")]),s._v(" 操作，很容易被想当然的认为是“线程安全”的。因为它看上去就是一个原子操作 "),a("em",[s._v("（指一个最小的操作单位，执行途中不会插入任何其他操作）")]),s._v("。然而真相并非如此，虽然从 Python 代码上来看，"),a("code",[s._v("value += 1")]),s._v(" 这个操作像是原子的。但它最终被 Python 解释器执行的时候，早就不再 "),a("em",[s._v("“原子”")]),s._v(" 了。")]),s._v(" "),a("p",[s._v("我们可以用前面提到的 "),a("code",[s._v("dis")]),s._v(" 模块来验证一下：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("incr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 dis 模块查看字节码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" dis\n\ndis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("incr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" LOAD_FAST                "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" LOAD_CONST               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" INPLACE_ADD\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" STORE_FAST               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" LOAD_CONST               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" RETURN_VALUE\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("在上面输出结果中，可以看到这个简单的累加语句，会被编译成包括取值和保存在内的好几个不同步骤，而在多线程环境下，任意一个其他线程都有可能在其中某个步骤切入进来，阻碍你获得正确的结果。")]),s._v(" "),a("p",[a("strong",[s._v("因此，请不要凭借自己的直觉来判断某个行为是否“线程安全”，不然等程序在高并发环境下出现奇怪的 bug 时，你将为自己的直觉付出惨痛的代价。")])]),s._v(" "),a("h3",{attrs:{id:"_2-字符串拼接并不慢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符串拼接并不慢"}},[s._v("#")]),s._v(" 2. 字符串拼接并不慢")]),s._v(" "),a("p",[s._v("我刚接触 Python 不久时，在某个网站看到这样一个说法： "),a("em",[s._v("“Python 里的字符串是不可变的，所以每一次对字符串进行拼接都会生成一个新对象，导致新的内存分配，效率非常低”。")]),s._v(" 我对此深信不疑。")]),s._v(" "),a("p",[s._v("所以，一直以来，我尽量都在避免使用 "),a("code",[s._v("+=")]),s._v(" 的方式去拼接字符串，而是用 "),a("code",[s._v('"".join(str_list)')]),s._v(" 之类的方式来替代。")]),s._v(" "),a("p",[s._v("但是，在某个偶然的机会下，我对 Python 的字符串拼接做了一次简单的性能测试后发现： "),a("strong",[s._v("Python 的字符串拼接根本就不慢！")]),s._v(" 在查阅了一些资料后，最终发现了真相。")]),s._v(" "),a("p",[s._v("Python 的字符串拼接在 2.2 以及之前的版本确实很慢，和我最早看到的说法行为一致。但是因为这个操作太常用了，所以之后的版本里专门针对它做了性能优化。大大提升了执行效率。")]),s._v(" "),a("p",[s._v("如今使用 "),a("code",[s._v("+=")]),s._v(" 的方式来拼接字符串，效率已经非常接近 "),a("code",[s._v('"".join(str_list)')]),s._v(" 了。所以，该拼接时就拼接吧，不必担心任何性能问题。")]),s._v(" "),a("blockquote",[a("p",[s._v("Hint: 如果你想了解更详细的相关内容，可以读一下这篇文章："),a("a",{attrs:{href:"http://blog.mclemon.io/python-efficient-string-concatenation-in-python-2016-edition",target:"_blank",rel:"noopener noreferrer"}},[s._v("Python - Efficient String Concatenation in Python (2016 edition) - smcl"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[s._v("#")]),s._v(" 结语")]),s._v(" "),a("p",[s._v("以上就是『Python 工匠』系列文章的第三篇，内容比较零碎。由于篇幅原因，一些常用的操作比如字符串格式化等，文章里并没有涵盖到。以后有机会再写吧。")]),s._v(" "),a("p",[s._v("让我们最后再总结一下要点：")]),s._v(" "),a("ul",[a("li",[s._v("编写代码时，请考虑阅读者的感受，不要出现太多神奇的字面量")]),s._v(" "),a("li",[s._v("当操作结构化字符串时，使用对象化模块比直接处理更有优势")]),s._v(" "),a("li",[s._v("dis 模块非常有用，请多多使用它验证你的猜测")]),s._v(" "),a("li",[s._v("多线程环境下的编码非常复杂，要足够谨慎，不要相信自己的直觉")]),s._v(" "),a("li",[s._v("Python 语言的更新非常快，不要被别人的经验所左右")])]),s._v(" "),a("p",[s._v("看完文章的你，有没有什么想吐槽的？请留言或者在 "),a("a",{attrs:{href:"https://github.com/piglei/one-python-craftsman",target:"_blank",rel:"noopener noreferrer"}},[s._v("项目 Github Issues"),a("OutboundLink")],1),s._v(" 告诉我吧。")]),s._v(" "),a("p",[a("RouterLink",{attrs:{to:"/docs/python-craftsman/4-mastering-container-types.html"}},[s._v(">>>下一篇【4.容器的门道】")])],1),s._v(" "),a("p",[a("RouterLink",{attrs:{to:"/docs/python-craftsman/2-if-else-block-secrets.html"}},[s._v("<<<上一篇【2.编写条件分支代码的技巧】")])],1)])}),[],!1,null,null,null);t.default=e.exports}}]);