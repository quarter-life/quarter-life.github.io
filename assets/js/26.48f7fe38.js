(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{584:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("blockquote",[a("p",[t._v("这是 “Python 工匠”系列的第 14 篇文章。"),a("a",{attrs:{href:"https://github.com/piglei/one-python-craftsman",target:"_blank",rel:"noopener noreferrer"}},[t._v("[查看系列所有文章]"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("在这篇文章中，我将继续介绍 SOLID 原则剩下的两位成员："),a("strong",[t._v("I（接口隔离原则）")]),t._v(" 和 "),a("strong",[t._v("D（依赖倒置原则）")]),t._v("。为了方便，这篇文章将会使用先 D 后 I 的顺序。")]),t._v(" "),a("h2",{attrs:{id:"d-依赖倒置原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#d-依赖倒置原则"}},[t._v("#")]),t._v(" D：依赖倒置原则")]),t._v(" "),a("p",[t._v("软件是由一个个模块组合而成的。当你跟别人说："),a("em",[t._v("“我在写一个很复杂的软件”")]),t._v("，其实你并不是直接在写那个软件，你只是在编写它的一个个模块，最后把它们放在一起组合成你的软件。")]),t._v(" "),a("p",[t._v("有了模块，模块间自然就有了依赖关系。比如，你的个人博客可能依赖着 Flask 框架，而 Flask 又依赖了 Werkzeug，Werkzeug 又由更多个低层模块组成。")]),t._v(" "),a("p",[t._v("依赖倒置原则（Dependency Inversion Principle）就是一条和依赖关系相关的原则。它认为："),a("strong",[t._v("“高层模块不应该依赖于低层模块，二者都应该依赖于抽象。”")])]),t._v(" "),a("blockquote",[a("p",[t._v("High-level modules should not depend on low-level modules. Both should depend on abstractions.")])]),t._v(" "),a("p",[t._v("这个原则看上去有点反直觉。毕竟，在我们的第一堂编程课上，老师就是这么教我们写代码的：*“高层模块要依赖低层模块，hello world 程序依赖 printf()。”*那为什么这条原则又说不要这样做呢？而依赖倒置原则里的“倒置”又是指什么？")]),t._v(" "),a("p",[t._v("让我们先把这些问题放在一边，看看下面这个小需求。上面这些问题的答案都藏在这个需求中。")]),t._v(" "),a("h3",{attrs:{id:"需求-按域名分组统计-hn-新闻数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需求-按域名分组统计-hn-新闻数量"}},[t._v("#")]),t._v(" 需求：按域名分组统计 HN 新闻数量")]),t._v(" "),a("p",[t._v("这次出场的还是我们的老朋友：新闻站点 "),a("a",{attrs:{href:"https://news.ycombinator.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hacker News"),a("OutboundLink")],1),t._v("。在 HN 上，每个用户提交的条目标题后面，都跟着这条内容的来源域名。")]),t._v(" "),a("p",[t._v("我想要按照来源域名来分组统计条目数量，这样就能知道哪个站在 HN 上最受欢迎。")]),t._v(" "),a("div",{staticStyle:{"text-align":"center",color:"#999",margin:"14px 0 14px","font-size":"12px"}},[a("img",{attrs:{src:"https://www.zlovezl.cn/static/uploaded/2020/02/SOLID_3_hn.jpg",width:"100%"}}),t._v("\n图：Hacker News 条目来源截图\n")]),t._v(" "),a("p",[t._v("这个需求非常简单，使用 "),a("code",[t._v("requests")]),t._v("、"),a("code",[t._v("lxml")]),t._v(" 模块可以很快完成任务：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# file: hn_site_grouper.py")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" lxml "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" etree\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" typing "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Dict\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" collections "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Counter\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SiteSourceGrouper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""对 HN 页面的新闻来源站点进行分组统计\n    """')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" url\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_groups")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""获取 (域名, 个数) 分组\n        """')]),t._v("\n        resp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" etree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HTML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过 xpath 语法筛选新闻域名标签")]),t._v("\n        elems "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'//table[@class="itemlist"]//span[@class="sitestr"]\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        groups "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Counter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" elem "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" elems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("elem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" groups\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    groups "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SiteSourceGrouper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://news.ycombinator.com/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打印最常见的 3 个域名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("most_common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("f'Site: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" | Count: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br")])]),a("p",[t._v("代码执行结果：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("❯ python hn_sitestr_grouper.py\nSite: github.com "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Count: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nSite: howonlee.github.io "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Count: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nSite: latimes.com "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Count: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("这段代码很短，核心代码总共不到 20 行。现在，让我们来理一理它里面的依赖关系。")]),t._v(" "),a("p",[a("code",[t._v("SiteSourceGrouper")]),t._v(" 是我们的核心类。为了完成任务，它需要使用 "),a("code",[t._v("requests")]),t._v(" 模块获取首页内容、"),a("code",[t._v("lxml")]),t._v(" 模块解析标题。所以，现在的依赖关系是“正向”的，高层模块 "),a("code",[t._v("SiteSourceGrouper")]),t._v(" 依赖低层模块 "),a("code",[t._v("requests")]),t._v("、"),a("code",[t._v("lxml")]),t._v("。")]),t._v(" "),a("div",{staticStyle:{"text-align":"center",color:"#999",margin:"14px 0 14px","font-size":"12px"}},[a("img",{attrs:{src:"https://www.zlovezl.cn/static/uploaded/2020/02/SOLID_D_before.png",width:"100%"}}),t._v("\n图：SiteSourceGrouper 依赖 requests、lxml\n")]),t._v(" "),a("p",[t._v("也许现在这张图在你眼里看起来特别合理。正常的依赖关系不就应该是这样的吗？别着急，我们还没给代码写单元测试呢。")]),t._v(" "),a("h3",{attrs:{id:"为-sitesourcegrouper-编写单元测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为-sitesourcegrouper-编写单元测试"}},[t._v("#")]),t._v(" 为 SiteSourceGrouper 编写单元测试")]),t._v(" "),a("p",[t._v("现在让我来为这段代码加上单元测试。首先让最普通的情况开始：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" hn_site_grouper "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" SiteSourceGrouper\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" collections "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Counter\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_grouper_returning_valid_types")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""测试 get_groups 是否返回了正确类型\n    """')]),t._v("\n    grouper "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SiteSourceGrouper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://news.ycombinator.com/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" grouper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Counter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"groups should be Counter instance"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("这是一个再简单不过的单元测试，我调用了 "),a("code",[t._v("SiteSourceGrouper.get_groups()")]),t._v(" 方法，然后简单校验了一下返回结果类型是否正常。")]),t._v(" "),a("p",[t._v("这个测试在本地电脑上执行时没有一点问题，可以正常通过。但当我在服务器上执行这段单元测试代码时，却发现它根本没办法成功。因为 "),a("strong",[t._v("我的服务器不能访问外网。")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行单元测试时提示网络错误")]),t._v("\nrequests"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exceptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ConnectionError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTPSConnectionPool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'news.ycombinator.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Errno "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nodename nor servname provided"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" known'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("到这里，单元测试暴露了 "),a("code",[t._v("SiteSourceGrouper")]),t._v(" 类的一个问题："),a("em",[t._v("它的核心逻辑依赖 requests 模块和网络连接，严格限制了单元测试的执行条件。")])]),t._v(" "),a("p",[t._v("既然如此，那要如何解决这个问题呢？如果你去问一个有经验的 Python 的开发者，十有八九他会甩给你一句话："),a("strong",[t._v("“用 mock 啊！”")])]),t._v(" "),a("h4",{attrs:{id:"使用-mock-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-mock-模块"}},[t._v("#")]),t._v(" 使用 mock 模块")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.python.org/3/library/unittest.mock.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("mock"),a("OutboundLink")],1),t._v(" 是 unittest 里的一个模块，同时也是一类测试手法的统称。假如你需要测试的模块里有一部分依赖很难被满足*（比如代码需要访问一整套 Kubernetes 集群）*，或者你想在测试时故意替换掉某些依赖，那么 mock 就能派上用场。")]),t._v(" "),a("p",[t._v("在这个例子里，使用 unittest.mock 模块需要做下面这些事情：")]),t._v(" "),a("ul",[a("li",[t._v("把一份正确的 HN 页面内容保存为本地文件 "),a("code",[t._v("static_hn.html")])]),t._v(" "),a("li",[t._v("在测试文件中导入 "),a("code",[t._v("unittest.mock")]),t._v(" 模块")]),t._v(" "),a("li",[t._v("在测试函数中，通过 "),a("a",{attrs:{href:"https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("mock.path('requests.get')")]),a("OutboundLink")],1),t._v(" 替换网络请求部分")]),t._v(" "),a("li",[t._v("将其修改为直接返回文件 "),a("code",[t._v("static_hn.html")]),t._v(" 的内容")])]),t._v(" "),a("p",[t._v("使用 mock 后的代码看起来是这样的：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" unittest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" mock\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_grouper_returning_valid_types")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""测试 get_groups 是否返回了正确类型\n    """')]),t._v("\n    resp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Mock 掉 requests.get 函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" mock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("patch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hn_site_grouper.requests.get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" mocked_get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        mocked_get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("return_value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" resp\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'static_hn.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" fp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Mock 掉响应的 text 字段")]),t._v("\n            resp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        grouper "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SiteSourceGrouper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://news.ycombinator.com/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" grouper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Counter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"groups should be Counter instance"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("上面的代码并不算复杂。对于 Python 这类动态语言来说，使用 mock 有着一种得天独厚的优势。因为在 Python 里，运行时的一切对象几乎都可以被替换掉。")]),t._v(" "),a("p",[t._v("不过虽然 mock 用起来很方便，但它不是解决我们问题的最佳做法。因为 mock 在带来方便的同时，也让测试代码变得更复杂和难以理解。而且，给测试加上 mock 也仅仅只是让我的单元测试能够跑起来，糟糕设计仍然是糟糕设计。它无法体现出单元测试最重要的价值之一："),a("strong",[t._v("“通过编写测试反向推动设计改进”")]),t._v("。")]),t._v(" "),a("p",[t._v("所以，我们需要做的是改进依赖关系，而不只是简单的在测试时把依赖模块替换掉。如何改进依赖关系？让我们看看“依赖倒置”是如何做的。")]),t._v(" "),a("h3",{attrs:{id:"实现依赖倒置原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现依赖倒置原则"}},[t._v("#")]),t._v(" 实现依赖倒置原则")]),t._v(" "),a("p",[t._v("首先，让我们重温一下“依赖倒置原则”*（后简称 D 原则）*的内容："),a("strong",[t._v("“高层模块不应该依赖于低层模块，二者都应该依赖于抽象。”")])]),t._v(" "),a("p",[t._v("在上面的代码里，高层模块 "),a("code",[t._v("SiteSourceGrouper")]),t._v(" 就直接依赖了低层模块 "),a("code",[t._v("requests")]),t._v("。为了让代码符合 D 原则，我们首先需要创造一个处于二者中间的抽象，然后让两个模块可以都依赖这个新的抽象层。")]),t._v(" "),a("p",[t._v("创建抽象的第一步*（可能也是最重要的一步）*，就是确定这个抽象层的职责。在例子中，高层模块主要依赖 "),a("code",[t._v("requests")]),t._v(" 做了这些事：")]),t._v(" "),a("ul",[a("li",[t._v("通过 "),a("code",[t._v("requests.get()")]),t._v(" 获取 response")]),t._v(" "),a("li",[t._v("通过 "),a("code",[t._v("response.text")]),t._v(" 获取响应文本")])]),t._v(" "),a("p",[t._v("所以，这个抽象层的主要职责就是产生 HN 站点的页面文本。我们可以给它起个名字："),a("code",[t._v("HNWebPage")]),t._v("。")]),t._v(" "),a("p",[t._v("确定了抽象层的职责和名字后，接下来应该怎么实现它呢？在 Java 或 Go 语言里，标准答案是定义 "),a("strong",[t._v("Interface")]),t._v("（接口）。因为对于这些编程语言来说，“接口”这两个字基本就可以等同于“抽象”。")]),t._v(" "),a("p",[t._v("拿 Go 来说，“Hacker News 站点页面”这层抽象就可以被定义成这样的 Interface：")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" HNWebPage "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GetText 获取页面文本")]),t._v("\n\t "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("不过，Python 根本没有接口这种东西。那该怎么办呢？虽然 Python 没有接口，但是有一个非常类似的东西："),a("strong",[t._v("“抽象类（Abstrace Class）”")]),t._v("。使用 "),a("a",{attrs:{href:"https://docs.python.org/3/library/abc.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("abc")]),a("OutboundLink")],1),t._v(" 模块就可以轻松定义出一个抽象类：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('from abc import ABCMeta, abstractmethod\n\n\nclass HNWebPage(metaclass=ABCMeta):\n    """抽象类：Hacker New 站点页面\n    """\n\n    @abstractmethod\n    def get_text(self) -> str:\n        raise NotImplementedError\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("抽象类和普通类的区别之一就是你不能将它实例化。如果你尝试实例化一个抽象类，解释器会报出下面的错误：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("TypeError: Can't instantiate abstract class HNWebPage with abstract methods get_text\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("所以，光有抽象类还不能算完事，我们还得定义几个依赖这个抽象类的实体。首先定义的是 "),a("code",[t._v("RemoteHNWebPage")]),t._v(" 类。它的作用就是通过 requests 模块请求 HN 页面，返回页面内容。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('class RemoteHNWebPage(HNWebPage):\n    """远程页面，通过请求 HN 站点返回内容"""\n\n    def __init__(self, url: str):\n        self.url = url\n\n    def get_text(self) -> str:\n        resp = requests.get(self.url)\n        return resp.text\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("定义了 "),a("code",[t._v("RemoteHNWebPage")]),t._v(" 类后，"),a("code",[t._v("SiteSourceGrouper")]),t._v(" 类的初始化方法和 "),a("code",[t._v("get_groups")]),t._v(" 也需要做对应的调整：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('class SiteSourceGrouper:\n    """对 HN 页面的新闻来源站点进行分组统计\n    """\n\n    def __init__(self, page: HNWebPage):\n        self.page = page\n\n    def get_groups(self) -> Dict[str, int]:\n        """获取 (域名, 个数) 分组\n        """\n        html = etree.HTML(self.page.get_text())\n        # 通过 xpath 语法筛选新闻域名标签\n        elems = html.xpath(\'//table[@class="itemlist"]//span[@class="sitestr"]\')\n\n        groups = Counter()\n        for elem in elems:\n            groups.update([elem.text])\n        return groups\n\n\ndef main():\n    # 实例化 page，传入 SiteSourceGrouper\n    page = RemoteHNWebPage(url="https://news.ycombinator.com/")\n    grouper = SiteSourceGrouper(page).get_groups()\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("p",[t._v("做完这些修改后，让我们再看看现在的模块依赖关系：")]),t._v(" "),a("div",{staticStyle:{"text-align":"center",color:"#999",margin:"14px 0 14px","font-size":"12px"}},[a("img",{attrs:{src:"https://www.zlovezl.cn/static/uploaded/2020/02/SOLID_D_after.png",width:"100%"}}),t._v("\n图：SiteSourceGrouper 和 RemoteHNWebPage 都依赖抽象层 HNWebPage\n")]),t._v(" "),a("p",[t._v("在图中，高层模块不再依赖低层模块，二者同时依赖于抽象概念 "),a("code",[t._v("HNWebPage")]),t._v("，低层模块的依赖箭头和之前相比倒过来了。所以我们称其为 "),a("strong",[t._v("依赖倒置")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"依赖倒置后的单元测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖倒置后的单元测试"}},[t._v("#")]),t._v(" 依赖倒置后的单元测试")]),t._v(" "),a("p",[t._v("再回到之前的单元测试上来。通过引入了新的抽象层 "),a("code",[t._v("HNWebPage")]),t._v("，我们可以实现一个不依赖外部网络的新类型 "),a("code",[t._v("LocalHNWebPage")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('class LocalHNWebPage(HNWebPage):\n    """本地页面，根据本地文件返回页面内容"""\n\n    def __init__(self, path: str):\n        self.path = path\n\n    def get_text(self) -> str:\n        with open(self.path, \'r\') as fp:\n            return fp.read()\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("所以，单元测试也可以改为使用 "),a("code",[t._v("LocalHNWebPage")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('def test_grouper_from_local():\n    page = LocalHNWebPage(path="./static_hn.html")\n    grouper = SiteSourceGrouper(page)\n    result = grouper.get_groups()\n    assert isinstance(result, Counter), "groups should be Counter instance"\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("这样就可以在没有外网的服务器上测试 "),a("code",[t._v("SiteSourceGrouper")]),t._v(" 类的核心逻辑了。")]),t._v(" "),a("blockquote",[a("p",[t._v("Hint：其实上面的测试函数 "),a("code",[t._v("test_grouper_from_local")]),t._v(" 远远算不上一个合格的测试用例。")]),t._v(" "),a("p",[t._v("如果真要测试 "),a("code",[t._v("SiteSourceGrouper")]),t._v(" 的核心逻辑。我们应该准备一个虚构的 Hacker News 页面 "),a("em",[t._v("（比如刚好包含 5 个 来源自 github.com 的条目）")]),t._v("，然后判断结果是否包含 "),a("code",[t._v("assert result['github.com] == 5")])])]),t._v(" "),a("h3",{attrs:{id:"问题-一定要使用抽象类-abc-吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-一定要使用抽象类-abc-吗"}},[t._v("#")]),t._v(" 问题：一定要使用抽象类 abc 吗？")]),t._v(" "),a("p",[t._v("为了实现依赖倒置，我们在上面定义了抽象类："),a("code",[t._v("HNWebPage")]),t._v("。那是不是只有定义了抽象类才能实现依赖倒置？只有用了抽象类才算是依赖倒置呢？")]),t._v(" "),a("p",[a("strong",[t._v("答案是否定的。")]),t._v(" 如果你愿意，你可以把代码里的抽象类 "),a("code",[t._v("HNWebPage")]),t._v(" 以及所有的相关引用都删掉，你会发现没有它们代码仍然可以正常运行。")]),t._v(" "),a("p",[t._v("这是因为 Python 是一门“鸭子类型”语言。这意味着只要 "),a("code",[t._v("RemoteHNWebPage")]),t._v(" 和 "),a("code",[t._v("LocalHNWebPage")]),t._v(" 类型保持着统一的接口协议*（提供 .get_text() 公开方法）*，并且它们的 "),a("strong",[t._v("协议符合我们定义的抽象")]),t._v("。那么那个中间层就存在，依赖倒置就是成立的。至于这份 "),a("strong",[t._v("协议")]),t._v(" 是通过抽象类还是普通父类（甚至可以是普通函数）定义的，就没那么重要了。")]),t._v(" "),a("p",[t._v("所以，虽然在某些编程语言中，实现依赖倒置必须得定义新的接口类型，但在 Python 里，依赖倒置并不是抽象类 abc 的特权。")]),t._v(" "),a("h3",{attrs:{id:"问题-抽象一定是好东西吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-抽象一定是好东西吗"}},[t._v("#")]),t._v(" 问题：抽象一定是好东西吗？")]),t._v(" "),a("p",[t._v("前面的所有内容，都是在说新增一个抽象层，然后让依赖关系倒过来的种种好处。所以，多抽象的代码一定就是好的吗？缺少抽象的代码就一定不够灵活？")]),t._v(" "),a("p",[t._v("和所有这类问题的标准回答一样，答案是："),a("strong",[t._v("视情况而定。")])]),t._v(" "),a("p",[t._v("当你习惯了依赖倒置原则以后，你会发现 "),a("em",[t._v("抽象（Abstract）")]),t._v(" 其实是一种思维方式，而不仅仅是一种编程手法。如果你愿意，你可以在代码里的所有地方都 "),a("strong",[t._v("硬挤")]),t._v(" 一层额外抽象出来：")]),t._v(" "),a("ul",[a("li",[t._v("比如代码依赖了 lxml 模块的 xpath 具体实现，我是不是得定义一层  "),a("em",[t._v("“HNTitleDigester”")]),t._v(" 把它抽象进去？")]),t._v(" "),a("li",[t._v("比如代码里的字符串字面量也是具体实现，我是不是得定义一个 "),a("em",[t._v('"StringLike"')]),t._v(" 类型把它抽象进去？")]),t._v(" "),a("li",[t._v("... ...")])]),t._v(" "),a("p",[t._v("事实上，抽象的好处显而易见："),a("strong",[t._v("它解耦了高层模块和低层模块间的依赖关系，让代码变得更灵活。")]),t._v(" 但抽象同时也带来了额外的编码与理解成本。所以，了解何时 "),a("strong",[t._v("不")]),t._v(" 抽象与何时抽象同样重要。"),a("strong",[t._v("只有对代码中那些现在或未来会发生变化的东西进行抽象，才能获得最大的收益。")])]),t._v(" "),a("h2",{attrs:{id:"i-接口隔离原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-接口隔离原则"}},[t._v("#")]),t._v(" I：接口隔离原则")]),t._v(" "),a("p",[t._v("接口隔离原则*（后简称 I 原则）*全称为 "),a("em",[t._v("“Interface Segregation Principles”")]),t._v("。顾名思义，它是一条和“接口（Interface）”有关的原则。")]),t._v(" "),a("p",[t._v("我在前面解释过何为“接口（Interface）”。"),a("strong",[t._v("接口是模块间相互交流的抽象协议")]),t._v("，它在不同的编程语言里有着不同的表现形态。比如在 Go 里它是 "),a("code",[t._v("type ... interface")]),t._v("，而在 Python 中它可以是抽象类、普通类或者函数，甚至某个只在你大脑里存在的一套协议。")]),t._v(" "),a("p",[t._v("I 原则认为："),a("strong",[t._v("“客户（client）应该不依赖于它不使用的方法”")])]),t._v(" "),a("blockquote",[a("p",[t._v("The interface-segregation principle (ISP) states that no client should be forced to depend on methods it does not use.")])]),t._v(" "),a("p",[t._v("这里说的“客户（Client）”指的是接口的使用方 "),a("em",[t._v("（客户程序）")]),t._v("，也就是调用接口方法的高层模块。拿上一个统计 HN 页面条目的例子来说：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("使用方（客户程序）")]),t._v("：SiteSourceGrouper")]),t._v(" "),a("li",[a("code",[t._v("接口（其实是抽象类）")]),t._v("：HNWebPage")]),t._v(" "),a("li",[a("code",[t._v("依赖关系")]),t._v("：调用接口方法："),a("code",[t._v("get_text()")]),t._v(" 获取页面文本")])]),t._v(" "),a("p",[t._v("在 I 原则看来，"),a("strong",[t._v("一个接口所提供的方法，应该就是使用方所需要的方法，不多不少刚刚好。")]),t._v(" 所以，在上个例子里，我们设计的接口 "),a("code",[t._v("HNWebPage")]),t._v(" 是符合接口隔离原则的。因为它没有向使用方提供任何后者不需要的方法 。")]),t._v(" "),a("blockquote",[a("p",[t._v("你需要 get_text()！我提供 get_text()！刚刚好！")])]),t._v(" "),a("p",[t._v("所以，这条原则看上去似乎很容易遵守。既然如此，让我们试试来违反它吧！")]),t._v(" "),a("h3",{attrs:{id:"例子-开发页面归档功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-开发页面归档功能"}},[t._v("#")]),t._v(" 例子：开发页面归档功能")]),t._v(" "),a("p",[t._v("让我们接着上一个例子开始。在实现了上个需求后，我现在有一个代表 Hacker News 站点页面的抽象类 "),a("code",[t._v("HNWebPage")]),t._v("，它只提供了一种行为，就是获取当前页面的文本内容。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HNWebPage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metaclass"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ABCMeta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@abstractmethod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""获取页面文本内容"""')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("现在，假设我要开发一个和 HN 页面有关的新功能： "),a("strong",[t._v("我想在不同时间点对 HN 首页内容进行归档，观察热点新闻在不同时间点发生的变化。")]),t._v(" 所以除了页面文本内容外，我还需要拿到页面的大小、生成时间这些额外信息，然后将它们都保存到数据库中。")]),t._v(" "),a("p",[t._v("为了做到这一点，现在的 "),a("code",[t._v("HNWebPage")]),t._v(" 类需要被扩展一下：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HNWebPage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metaclass"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ABCMeta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@abstractmethod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""获取页面文本内容"""')]),t._v("\n        \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新增 get_size 与 get_generated_at")]),t._v("\n        \n    "),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@abstractmethod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""获取页面大小"""')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@abstractmethod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_generated_at")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""获取页面生成时间"""')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("我在原来的类上增加了两个新的抽象方法："),a("code",[t._v("get_size")]),t._v(" 和 "),a("code",[t._v("get_generated_at")]),t._v("。这样归档程序就能通过它们拿到页面大小和生成时间了。")]),t._v(" "),a("p",[t._v("改完抽象类后，紧接着的任务就是修改依赖它的实体类。")]),t._v(" "),a("h3",{attrs:{id:"问题-实体类不符合-hnwebpage-接口规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-实体类不符合-hnwebpage-接口规范"}},[t._v("#")]),t._v(" 问题：实体类不符合 HNWebPage 接口规范")]),t._v(" "),a("p",[t._v("在修改抽象类前，我们有两个实现了它协议的实体类："),a("code",[t._v("RemoteHNWebPage")]),t._v(" 和 "),a("code",[t._v("LocalHNWebPage")]),t._v("。如今，"),a("code",[t._v("HNWebPage")]),t._v(" 增加了两个新方法 "),a("code",[t._v("get_size")]),t._v(" 和 "),a("code",[t._v("get_generated_at")]),t._v("。我们自然需要把这两个实体类也加上这两个方法。")]),t._v(" "),a("p",[a("code",[t._v("RemoteHNWebPage")]),t._v(" 类的修改很好做，我们只要让 "),a("code",[t._v("get_size")]),t._v(" 放回页面长度，让 "),a("code",[t._v("get_generated_at")]),t._v(" 返回当前时间就行了。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# class RemoteHNWebPage:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_generated_at")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 页面生成时间等同于通过 requests 请求的时间")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("但是，在给 "),a("code",[t._v("LocalHNWebPage")]),t._v(" 添加 "),a("code",[t._v("get_generated_at")]),t._v(" 方法时，我碰到了一个问题。"),a("code",[t._v("LocalHNWebPage")]),t._v(" 是一个完全基于本地页面文件作为数据来源的类，仅仅通过 “static_hn.html” 这么一个本地文件，我根本就没法知道它的内容是什么时候生成的。")]),t._v(" "),a("p",[t._v("这时我只能选择让它的 "),a("code",[t._v("get_generated_at")]),t._v(" 方法返回一个错误的结果*（比如文件的修改时间）*，或者直接抛出异常。无论是哪种做法，我都可能违反 "),a("a",{attrs:{href:"https://www.zlovezl.cn/articles/write-solid-python-codes-part-2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("里式替换原则"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("Hint：里式替换原则认为子类（派生类）对象应该可以在程序中替代父类（基类）对象使用，而不破坏程序原本的功能。让方法抛出异常显然破坏了这一点。")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# class LocalHNWebPage:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_generated_at")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" NotImplementedError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local web page can not provide generate_at info"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("所以，对现有接口的盲目扩展暴露出来一个问题："),a("strong",[t._v("更多的接口方法意味着更高的实现成本，给实现方带来麻烦的概率也变高了。")])]),t._v(" "),a("p",[t._v("不过现在让我们暂且把这个问题放到一边，继续写一个 "),a("code",[t._v("SiteAchiever")]),t._v(" 类完成归档任务：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SiteAchiever")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""将不同时间点的 HN 页面归档"""')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("save_page")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" page"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HNWebPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""将页面保存到后端数据库\n        """')]),t._v("\n        data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" page"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"generated_at"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" page"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_generated_at"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"size"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" page"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将 data 保存到数据库中")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h3",{attrs:{id:"成功违反-i-协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#成功违反-i-协议"}},[t._v("#")]),t._v(" 成功违反 I 协议")]),t._v(" "),a("p",[t._v("代码写到这，让我们回头看看上个例子里的 "),a("em",[t._v("条目来源分组类 "),a("code",[t._v("SiteSourceGrouper")])]),t._v(" 。")]),t._v(" "),a("div",{staticStyle:{"text-align":"center",color:"#999",margin:"14px 0 14px","font-size":"12px"}},[a("img",{attrs:{src:"https://www.zlovezl.cn/static/uploaded/2020/02/SOLID_I_before.png",width:"100%"}}),t._v("\n图：成功违反了 I 协议\n")]),t._v(" "),a("p",[t._v("当我修改完抽象类后，虽然 "),a("code",[t._v("SiteSourceGrouper")]),t._v(" 仍然依赖着 "),a("code",[t._v("HNWebPage")]),t._v("，但它其实只使用了 "),a("code",[t._v("get_text")]),t._v(" 这一个方法而已，其他  "),a("code",[t._v("get_size")]),t._v("、"),a("code",[t._v("get_generated")]),t._v(" 这些它 "),a("strong",[t._v("不使用的方法也成为了它的依赖。")])]),t._v(" "),a("p",[t._v("很明显，现在的设计违反了接口隔离原则。为了修复这一点，我们需要将 "),a("code",[t._v("HNWebPage")]),t._v(" 拆成更小的接口。")]),t._v(" "),a("h3",{attrs:{id:"如何分拆接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何分拆接口"}},[t._v("#")]),t._v(" 如何分拆接口")]),t._v(" "),a("p",[t._v("设计接口有一个技巧："),a("strong",[t._v("让客户（调用方）来驱动协议设计")]),t._v("。让我们来看看，"),a("code",[t._v("HNWebPage")]),t._v(" 到底有哪些客户：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("SiteSourceGrouper")]),t._v("：域名来源统计，依赖 "),a("code",[t._v("get_text()")])]),t._v(" "),a("li",[a("code",[t._v("SiteAchiever")]),t._v("：HN 页面归档程序，依赖 "),a("code",[t._v("get_text()")]),t._v("、"),a("code",[t._v("get_size()")]),t._v("、"),a("code",[t._v("get_generated_at()")])])]),t._v(" "),a("p",[t._v("按照上面的方式，我们可以把 "),a("code",[t._v("HNWebPage")]),t._v(" 分离成两个独立的抽象类：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ContentOnlyHNWebPage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metaclass"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ABCMeta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""抽象类：Hacker New 站点页面（仅提供内容）\n    """')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@abstractmethod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" NotImplementedError\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HNWebPage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ContentOnlyHNWebPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""抽象类：Hacker New 站点页面（含元数据）\n    """')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@abstractmethod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""获取页面大小"""')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@abstractmethod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_generated_at")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""获取页面生成时间"""')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("p",[t._v("将旧类拆分成两个不同的抽象类后，"),a("code",[t._v("SiteSourceGrouper")]),t._v(" 和 "),a("code",[t._v("SiteAchiever")]),t._v(" 就可以分别依赖不同的抽象类了。")]),t._v(" "),a("p",[t._v("同时，对于 "),a("code",[t._v("LocalHNWebPage")]),t._v(" 类来说，它也只需要实现那个只返回的文本的 "),a("code",[t._v("ContentOnlyHNWebPage")]),t._v(" 就行。")]),t._v(" "),a("div",{staticStyle:{"text-align":"center",color:"#999",margin:"14px 0 14px","font-size":"12px"}},[a("img",{attrs:{src:"https://www.zlovezl.cn/static/uploaded/2020/02/SOLID_I_after.png",width:"100%"}}),t._v("\n图：实施接口隔离后的结果\n")]),t._v(" "),a("h3",{attrs:{id:"一些不容易发现的违反情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些不容易发现的违反情况"}},[t._v("#")]),t._v(" 一些不容易发现的违反情况")]),t._v(" "),a("p",[t._v("虽然我花了很长的篇幅，用了好几个抽象类才把接口隔离原则讲明白，但其实在我们的日常编码中，对这条原则的违反经常会出现在一些更容易被忽视的地方。")]),t._v(" "),a("p",[t._v("举个例子，当我们在 web 站点里判断用户请求的 Cookies 或头信息是否包含某个标记值时，我们经常直接写一个依赖整个 "),a("code",[t._v("request")]),t._v(" 对象的函数：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_new_visitor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HttpRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""从 Cookies 判断是否新访客\n    """')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("COOKIES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'is_new_visitor'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("但事实上，除了 "),a("code",[t._v(".COOKIES")]),t._v(" 以外，"),a("code",[t._v("is_new_visitor")]),t._v(" 根本就不需要 "),a("code",[t._v("request")]),t._v(" 对象里面的任何其他内容。“用户请求对象（request）”是一个比“Cookie 字典（request.COOKIES）”复杂得多的抽象。我们完全可以把函数改成只接收 cookies 字典。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_new_visitor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cookies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""从 Cookies 判断是否新访客\n    """')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cookies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'is_new_visitor'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("类似的情况还有很多，比如一个发短信的函数本身只需要两个参数 "),a("code",[t._v("电话号码")]),t._v(" 和 "),a("code",[t._v("用户姓名")]),t._v("，但是函数却依赖了整个用户对象 "),a("code",[t._v("User")]),t._v("，里面包含着几十个用不上的其他字段和方法。")]),t._v(" "),a("p",[t._v("对于这类函数，我们都可以重新考虑一下它们的抽象是否合理，是否需要应用接口隔离原则。")]),t._v(" "),a("h3",{attrs:{id:"现实世界中的接口隔离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现实世界中的接口隔离"}},[t._v("#")]),t._v(" 现实世界中的接口隔离")]),t._v(" "),a("p",[t._v("当你知道了接口隔离原则的种种好处后，你很自然就会养成写小类、小接口的习惯。在现实世界里，其实已经有很多小而精的接口设计可以供你参考。比如：")]),t._v(" "),a("ul",[a("li",[t._v("Python 的 "),a("a",{attrs:{href:"https://docs.python.org/3/library/collections.abc.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("collections.abc"),a("OutboundLink")],1),t._v(" 模块里面有非常多的小接口")]),t._v(" "),a("li",[t._v("Go 里面的 "),a("a",{attrs:{href:"https://golang.org/pkg/io/#Reader",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reader 和 Writer"),a("OutboundLink")],1),t._v(" 也是非常好的例子")])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("在这篇文章里，我向你介绍了 SOLID 原则的最后两位成员："),a("strong",[t._v("“依赖倒置原则”")]),t._v(" 与 "),a("strong",[t._v("“接口隔离原则”")]),t._v("。")]),t._v(" "),a("p",[t._v("这两条原则之间有一个共同点，那就是它们都和 "),a("strong",[t._v("“抽象”")]),t._v(" 有着紧密的联系。前者告诉我们要面向抽象而非实现编程，后者则教导我们在设计抽象时应该做到精准。")]),t._v(" "),a("p",[t._v("最后再总结一下：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("“D：依赖倒置原则”")]),t._v(" 认为高层模块和低层模块都应该依赖于抽象")]),t._v(" "),a("li",[t._v("依赖抽象，意味着我们可以完全修改低层实现，而不影响高层代码")]),t._v(" "),a("li",[t._v("在 Python 中你可以使用 abc 模块来定义抽象类")]),t._v(" "),a("li",[t._v("除 abc 外，你也可以使用其他技术来完成依赖倒置")]),t._v(" "),a("li",[a("strong",[t._v("“I：接口隔离原则”")]),t._v(" 认为客户不应该依赖任何它不使用的方法")]),t._v(" "),a("li",[t._v("设计接口就是设计抽象")]),t._v(" "),a("li",[t._v("违反接口隔离原则也可能会导致违反单一职责与里式替换原则")]),t._v(" "),a("li",[t._v("写更小的类、写更小的接口在大多数情况下是个好主意")])]),t._v(" "),a("p",[t._v("看完文章的你，有没有什么想吐槽的？请留言或者在 "),a("a",{attrs:{href:"https://github.com/piglei/one-python-craftsman",target:"_blank",rel:"noopener noreferrer"}},[t._v("项目 Github Issues"),a("OutboundLink")],1),t._v(" 告诉我吧。")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/docs/python-craftsman/15-thinking-in-edge-cases.html"}},[t._v(">>>下一篇【15.在边界处思考】")])],1),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/docs/python-craftsman/13-write-solid-python-codes-part-2.html"}},[t._v("<<<上一篇【13.写好面向对象代码的原则（中）】")])],1),t._v(" "),a("h2",{attrs:{id:"附录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),a("ul",[a("li",[t._v("题图来源: Photo by Carolina Garcia Tavizon on Unsplash")]),t._v(" "),a("li",[t._v("更多系列文章地址：https://github.com/piglei/one-python-craftsman")])]),t._v(" "),a("p",[t._v("系列其他文章：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/piglei/one-python-craftsman",target:"_blank",rel:"noopener noreferrer"}},[t._v("所有文章索引 [Github]"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zlovezl.cn/articles/write-solid-python-codes-part-1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python 工匠：写好面向对象代码的原则（上）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zlovezl.cn/articles/write-solid-python-codes-part-2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python 工匠：写好面向对象代码的原则（中）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zlovezl.cn/articles/write-solid-python-codes-part-3/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python 工匠：写好面向对象代码的原则（下）"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);